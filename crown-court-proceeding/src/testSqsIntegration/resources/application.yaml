server:
  port: 52314

spring:
  cloud:
    aws:
      credentials:
        access-key: test
        secret-key: test
      region:
        static: us-east-1

  datasource:
    url: jdbc:h2:mem:crime_means_assessment;MODE=PostgreSQL;DB_CLOSE_DELAY=-1
    username: sa
    password: sa
    driver-class-name: org.h2.Driver

  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.yaml
    contexts: tests

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: validate
    show-sql: true
    generate-ddl: false

  security:
    oauth2:
      client:
        provider:
          maat-api:
            token-uri: http://localhost:${wiremock.server.port}/oauth2/token
          cda:
            token-uri: http://localhost:${wiremock.server.port}/oauth2/token
          evidence:
            token-uri: http://localhost:${wiremock.server.port}/oauth2/token
        registration:
          maat-api:
            client-id: dummy-client
            client-secret: dummy-secret
            authorization-grant-type: client_credentials
          cda:
            client-id: dummy-client
            client-secret: dummy-secret
            authorization-grant-type: client_credentials
          evidence:
            client-id: dummy-client
            client-secret: dummy-secret
            authorization-grant-type: client_credentials
      resource-server:
        jwt:
          issuer-uri: ${crown-court-proceeding.security.issuer-uri}

springdoc:
  api-docs:
    path: /crown-court-proceeding

swagger-ui:
  path: /open-api/docs.html

services:
  court-data-adapter:
    base-url: http://localhost:${wiremock.server.port}/api/internal/v2
    registrationId: cda

  maat-api:
    baseUrl: http://localhost:${wiremock.server.port}/api/internal/v1/assessment
    registrationId: maat-api

  evidence:
    baseUrl: http://localhost:${wiremock.server.port}/api/internal/v1/evidence
    registrationId: evidence

resilience4j:
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 2s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retry-exceptions:
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.reactive.function.client.WebClientResponseException.BadGateway
          - org.springframework.web.reactive.function.client.WebClientResponseException.TooManyRequests
          - org.springframework.web.reactive.function.client.WebClientResponseException.ServiceUnavailable
          - org.springframework.web.reactive.function.client.WebClientResponseException.GatewayTimeout

    instances:
      maatCourtDataWebClient:
        base-config: default

crown-court-proceeding:
  security:
    issuer-uri: http://localhost:${server.port}

cloud-platform:
  aws:
    sqs:
      region: us-east-1
      accesskey: test
      secretkey: test
      queue:
        hearingResulted: hearing
        prosecutionConcluded: crime-apps-dev-prosecution-concluded-queue
        config:
          messageDelay: 900
          messageDelayDuration: 120

feature:
  prosecution-concluded-listener:
    enabled: false
    dbUsername: test
  prosecution-concluded-schedule:
    enabled: false

queue:
  message:
    log:
      cron:
        expression: 0 0 0 * * *
      expiryInDays: 15

reports:
  reactivated_cases:
    cron:
      expression: 0 0 9 * * *
  dropped_prosecution:
    cron:
      expression: 0 0 9 * * *

emailClient:
  notify:
    key: api_key
    reactivated_prosecution:
      template-id: template_id
      recipient: test_recipient
    dropped_prosecution:
      template-id: template_id
      recipient: test_recipient
