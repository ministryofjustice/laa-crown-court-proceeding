plugins {
    id "java"
    id "jacoco"
    id "org.sonarqube" version "4.0.0.2929"
    id "info.solidsoft.pitest" version "1.9.11"
    id "org.springframework.boot" version "3.3.5"
    id "io.spring.dependency-management" version "1.1.6"
}

group = "uk.gov.justice.laa.crime"

jacoco {
    toolVersion = "0.8.8"
}

def versions = [
        okhttpVersion                    : "4.9.3",
        pitest                           : "1.4.10",
        amazonSQSVersion                 : "2.1.4",
        springFrameworkCloudVersion      : "3.0.1",
        crimeCommonsClasses              : "3.33.0",
        commonsRestClient                : "3.18.0",
        commonsModSchemas                : "1.20.0",
        mockitoInlineVersion             : "5.2.0",
        wmStubRunnerVersion              : "4.0.1",
        springDocWebMVCVersion           : "2.1.0",
        awsSdkStsVersion                 : "2.20.69",
        awsJavaSdkVersion                : "1.12.264",
        localstackUtilsVersion           : "0.2.23",
        testcontainersLocalstackVersion  : "1.18.3",
        testcontainersJunitjupiterVersion: "1.19.0",
        postgresqlVersion                : "42.7.2",
        notifyClientVersion              : "5.1.0-RELEASE"
]

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

sourceSets {
    testSqsIntegration {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    testSqsIntegrationImplementation.extendsFrom implementation
}

repositories {
    mavenCentral()
}

dependencies {

    implementation "uk.gov.justice.service.laa-crime:crime-commons-spring-boot-starter-rest-client:$versions.commonsRestClient:all"
    implementation "uk.gov.justice.service.laa-crime:crime-commons-classes:$versions.crimeCommonsClasses"
    implementation "uk.gov.justice.service.laa-crime:crime-commons-mod-schemas:$versions.commonsModSchemas"

    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    implementation "io.awspring.cloud:spring-cloud-aws-starter-sqs:$versions.springFrameworkCloudVersion"
    implementation "org.springframework:spring-jms"
    implementation "com.amazonaws:amazon-sqs-java-messaging-lib:$versions.amazonSQSVersion"
    implementation "software.amazon.awssdk:sts:$versions.awsSdkStsVersion"

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$versions.springDocWebMVCVersion"

    // Spring Boot version contains security vulnerabilities raised by Snyk
    implementation "org.postgresql:postgresql:$versions.postgresqlVersion"
    implementation "org.liquibase:liquibase-core"

    implementation "com.google.code.gson:gson"

    implementation "io.micrometer:micrometer-registry-prometheus"

    implementation "uk.gov.service.notify:notifications-java-client:$versions.notifyClientVersion"

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    testImplementation "com.h2database:h2"
    testImplementation "org.mockito:mockito-inline:$versions.mockitoInlineVersion"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner:$versions.wmStubRunnerVersion"
    testImplementation "org.pitest:pitest:$versions.pitest"

    //dependencies for ProsecutionListenerTest only
    testSqsIntegrationImplementation "com.amazonaws:aws-java-sdk-sqs:$versions.awsJavaSdkVersion"
    testSqsIntegrationImplementation "com.amazonaws:aws-java-sdk:$versions.awsJavaSdkVersion"
    testSqsIntegrationImplementation "org.testcontainers:junit-jupiter:$versions.testcontainersJunitjupiterVersion"
    testSqsIntegrationImplementation "org.testcontainers:localstack:$versions.testcontainersLocalstackVersion"
    testSqsIntegrationImplementation "cloud.localstack:localstack-utils:$versions.localstackUtilsVersion"
    testSqsIntegrationImplementation "com.h2database:h2"
    testSqsIntegrationImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner:$versions.wmStubRunnerVersion"
}

configurations {
    testImplementation {
        exclude group: 'junit', module: 'junit'
    }
}

test {
    useJUnitPlatform()
    dependsOn "cleanTest"
    finalizedBy jacocoTestReport
}

task testSqsIntegration(type: Test) {
    useJUnitPlatform()
    testClassesDirs = sourceSets.testSqsIntegration.output.classesDirs
    classpath = sourceSets.testSqsIntegration.runtimeClasspath
}

check.dependsOn testSqsIntegration

jacocoTestReport {
    onlyIf = { true }
    reports {
        xml.required = true
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ["**/entity/**",
                              "**/dto/**",
                              "**/config/**"])
        }))
    }
}

pitest {
    targetClasses = ["uk.gov.justice.laa.crime.crowncourt.*", "uk.gov.justice.laa.crime.crowncourt.controller.*", "uk.gov.justice.laa.crime.crowncourt.validation.*"]
    excludedClasses = ["uk.gov.justice.laa.crime.crowncourt.dto.*", "uk.gov.justice.laa.crime.crowncourt.mapper.*", "uk.gov.justice.laa.crime.crowncourt.CrownCourtProceedingApplication"]
    threads = 5
    outputFormats = ["XML", "HTML"]
    timestampedReports = false
    mutationThreshold = 60
}

tasks["sonar"].dependsOn test

sonar {
    properties {
        property "sonar.exclusions", "**/entity/**.java , **/model/**.java , **/dto/**.java , **/config/**.java, **/jms/**.java,**/exception/**.java,**/handler/**.java"
        property "sonar.coverage.exclusions", "**/CrownCourtProceedingApplication.java"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.projectKey", "ministryofjustice_laa-crown-court-proceeding"
        property "sonar.organization", "ministryofjustice"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.projectName", "Crime Apps :: crown-court-proceeding"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

